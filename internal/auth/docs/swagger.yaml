definitions:
  accountV2.ApikeyResponse:
    properties:
      code:
        type: string
      message:
        type: string
      scope:
        enum:
          - register
          - reset
        type: string
    type: object
  accountV2.EmailVerifyResponse:
    properties:
      message:
        type: string
      scope:
        enum:
          - register
          - reset
        type: string
    type: object
  accountV2.LoginRequest:
    properties:
      email:
        description: email in email blacklist
        type: string
      password:
        minLength: 8
        type: string
    type: object
  accountV2.RegisterInBatchRequest:
    properties:
      data:
        items:
          $ref: '#/definitions/accountV2.LoginRequest'
        type: array
    type: object
  accountV2.RegisterRequest:
    properties:
      email:
        description: email in email blacklist
        type: string
      password:
        minLength: 8
        type: string
      verification:
        maxLength: 6
        minLength: 6
        type: string
    type: object
  accountV2.TokenResponse:
    properties:
      access:
        type: string
      message:
        type: string
      refresh:
        type: string
    type: object
  utils.MessageResponse:
    properties:
      data: { }
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: dev@fduhole.com
    name: Maintainer Chen Ke
    url: https://danxi.fduhole.com/about
  description: Next Generation of Auth microservice integrated with kong for registration
    and issuing tokens
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Open Tree Hole Auth
  version: 3.0.0
paths:
  /api/debug/register:
    post:
      consumes:
        - application/json
      description: register with email, password, not need verification code
      parameters:
        - description: json
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.LoginRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 用户已注册
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      security:
        - ApiKeyAuth: [ ]
      summary: register, debug only
      tags:
        - Account
  /api/debug/register/_batch:
    post:
      consumes:
        - application/json
      description: register with email, password, not need verification code
      parameters:
        - description: RegisterInBatchRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterInBatchRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 用户已注册
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      security:
        - ApiKeyAuth: [ ]
      summary: register in batch, debug only
      tags:
        - Account
  /api/login:
    post:
      consumes:
        - application/json
      description: Login with email and password, return jwt token, no need jwt
      parameters:
        - description: LoginRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.LoginRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Login
      tags:
        - Account
  /api/logout:
    post:
      description: Logout, need jwt
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Logout
      tags:
        - Account
  /api/refresh:
    post:
      consumes:
        - application/json
      description: Refresh jwt token, need jwt
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
      summary: Refresh
      tags:
        - Account
  /api/register:
    post:
      consumes:
        - application/json
      description: Register with email, password and optional verification code if
        enabled
      parameters:
        - description: RegisterRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 验证码错误，用户已存在
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Register
      tags:
        - Account
    put:
      consumes:
        - application/json
      description: reset user password and jwt credential
      parameters:
        - description: RegisterRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 验证码错误
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: reset password
      tags:
        - Account
  /api/users/me:
    delete:
      description: delete user account and related jwt credentials
      parameters:
        - description: email, password
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.LoginRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: 密码错误“
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: 用户不存在“
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: delete user
      tags:
        - Account
  /api/v3/debug/register:
    post:
      consumes:
        - application/json
      description: register with email, password, not need verification code
      parameters:
        - description: RegisterInBatchRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterInBatchRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 用户已注册
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      security:
        - ApiKeyAuth: [ ]
      summary: register in batch, debug only
      tags:
        - Account V3
  /api/v3/login:
    post:
      consumes:
        - application/json
      description: Login with email and password, return jwt token, no need jwt
      parameters:
        - description: LoginRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.LoginRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Login
      tags:
        - Account V3
  /api/v3/logout:
    post:
      description: Logout, need jwt
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Logout
      tags:
        - Account V3
  /api/v3/refresh:
    post:
      consumes:
        - application/json
      description: Refresh jwt token, need jwt
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
      summary: Refresh
      tags:
        - Account V3
  /api/v3/register:
    post:
      consumes:
        - application/json
      description: Register with email, password and optional verification code if
        enabled
      parameters:
        - description: RegisterRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 验证码错误，用户已存在
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: Register
      tags:
        - Account V3
    put:
      consumes:
        - application/json
      description: reset password and jwt credential
      parameters:
        - description: RegisterRequest
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.RegisterRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.TokenResponse'
        "400":
          description: 验证码错误
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: reset password
      tags:
        - Account V3
  /api/v3/users/{id}:
    delete:
      description: delete user account, admin only
      parameters:
        - description: user id
          in: path
          name: id
          required: true
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: delete user by id
      tags:
        - Account V3
  /api/v3/users/me:
    delete:
      description: delete user account and related jwt credentials
      parameters:
        - description: email, password
          in: body
          name: json
          required: true
          schema:
            $ref: '#/definitions/accountV2.LoginRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: 密码错误
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: delete user by me
      tags:
        - Account V3
  /api/v3/verify/email:
    get:
      description: verify with email in query, Send verification email
      parameters:
        - description: email
          in: query
          name: email
          required: true
          type: string
        - description: scope
          in: query
          name: scope
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.EmailVerifyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "403":
          description: email不在白名单中
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: verify with email in query
      tags:
        - Account V3
  /api/verify/apikey:
    get:
      deprecated: true
      description: verify with email in query, return verification code
      parameters:
        - in: query
          name: apikey
          type: string
        - default: false
          description: if true, return whether registered
          in: query
          name: check_register
          type: boolean
        - description: email in email blacklist
          in: query
          name: email
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: 用户未注册
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "403":
          description: apikey不正确
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "409":
          description: 用户已注册
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: verify with email in query and apikey
      tags:
        - Account
  /api/verify/email:
    get:
      description: verify with email in query, Send verification email
      parameters:
        - description: email
          in: query
          name: email
          required: true
          type: string
        - description: scope
          in: query
          name: scope
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.EmailVerifyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: verify with email in query
      tags:
        - Account
  /api/verify/email/{email}:
    get:
      deprecated: true
      description: verify with email in path, send verification email
      parameters:
        - description: email
          in: path
          name: email
          required: true
          type: string
        - description: scope
          in: query
          name: scope
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accountV2.EmailVerifyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.MessageResponse'
      summary: verify with email in path
      tags:
        - Account
swagger: "2.0"
