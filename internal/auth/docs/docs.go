// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maintainer Chen Ke",
            "url": "https://danxi.fduhole.com/about",
            "email": "dev@fduhole.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/debug/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "register with email, password, not need verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "register, debug only",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "用户已注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/debug/register/_batch": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "register with email, password, not need verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "register in batch, debug only",
                "parameters": [
                    {
                        "description": "RegisterInBatchRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterInBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "用户已注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Login with email and password, return jwt token, no need jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "description": "Logout, need jwt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "description": "Refresh jwt token, need jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "put": {
                "description": "reset user password and jwt credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "reset password",
                "parameters": [
                    {
                        "description": "RegisterRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register with email, password and optional verification code if enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "RegisterRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误，用户已存在",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/users/me": {
            "delete": {
                "description": "delete user account and related jwt credentials",
                "tags": [
                    "Account"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "description": "email, password",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "密码错误“",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "用户不存在“",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/debug/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "register with email, password, not need verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "register in batch, debug only",
                "parameters": [
                    {
                        "description": "RegisterInBatchRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterInBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "用户已注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/login": {
            "post": {
                "description": "Login with email and password, return jwt token, no need jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/logout": {
            "post": {
                "description": "Logout, need jwt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/refresh": {
            "post": {
                "description": "Refresh jwt token, need jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "Refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/register": {
            "put": {
                "description": "reset password and jwt credential",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "reset password",
                "parameters": [
                    {
                        "description": "RegisterRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register with email, password and optional verification code if enabled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "RegisterRequest",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accountV2.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "验证码错误，用户已存在",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/users/me": {
            "delete": {
                "description": "delete user account and related jwt credentials",
                "tags": [
                    "Account V3"
                ],
                "summary": "delete user by me",
                "parameters": [
                    {
                        "description": "email, password",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accountV2.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "密码错误",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "用户不存在",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/users/{id}": {
            "delete": {
                "description": "delete user account, admin only",
                "tags": [
                    "Account V3"
                ],
                "summary": "delete user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "用户不存在",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/v3/verify/email": {
            "get": {
                "description": "verify with email in query, Send verification email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account V3"
                ],
                "summary": "verify with email in query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scope",
                        "name": "scope",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.EmailVerifyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "email不在白名单中",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/verify/apikey": {
            "get": {
                "description": "verify with email in query, return verification code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "verify with email in query and apikey",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "name": "apikey",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "if true, return whether registered",
                        "name": "check_register",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "email in email blacklist",
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用户未注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "apikey不正确",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "409": {
                        "description": "用户已注册",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/verify/email": {
            "get": {
                "description": "verify with email in query, Send verification email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "verify with email in query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scope",
                        "name": "scope",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.EmailVerifyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/verify/email/{email}": {
            "get": {
                "description": "verify with email in path, send verification email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "verify with email in path",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "scope",
                        "name": "scope",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/accountV2.EmailVerifyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accountV2.ApikeyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "scope": {
                    "type": "string",
                    "enum": [
                        "register",
                        "reset"
                    ]
                }
            }
        },
        "accountV2.EmailVerifyResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "scope": {
                    "type": "string",
                    "enum": [
                        "register",
                        "reset"
                    ]
                }
            }
        },
        "accountV2.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "email in email blacklist",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "accountV2.RegisterInBatchRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/accountV2.LoginRequest"
                    }
                }
            }
        },
        "accountV2.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "email in email blacklist",
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "verification": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                }
            }
        },
        "accountV2.TokenResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "utils.MessageResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Open Tree Hole Auth",
	Description:      "Next Generation of Auth microservice integrated with kong for registration and issuing tokens",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
